plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'application'
  // gradle dependencyUpdates -Drevision=release
  id 'com.github.ben-manes.versions' version '0.13.0'
  id("org.springframework.boot") version "3.0.7"
  id("io.spring.dependency-management") version "1.1.0"
}

//jar { baseName = 'rabbit-boot' }
group = "daggerok.messaging.rabbit"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_17

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

mainClassName = 'com.hendisantika.messaging.rabbit.MessagingRabbitApplication'

//configurations {
//  compileOnly {
//    extendsFrom(configurations.annotationProcessor.get())
//  }
//}


repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  implementation("org.springframework.boot:spring-boot-starter-web")
  implementation("org.springframework.boot:spring-boot-starter-amqp")
  implementation("org.springframework.amqp:spring-rabbit")
  implementation("org.springframework.boot:spring-boot-starter-mustache")
  compileOnly("org.projectlombok:lombok")
  implementation("org.webjars:webjars-locator:0.3+")
  implementation("org.webjars:bootstrap:3+")
  implementation("org.webjars:jquery:2+")
  developmentOnly("org.springframework.boot:spring-boot-devtools")
  annotationProcessor("org.projectlombok:lombok")
  testImplementation("org.springframework.boot:spring-boot-starter-test")
  testImplementation("org.springframework.amqp:spring-rabbit-test")
}

// gradle bootRun -Dserver.context-path=/app
bootRun { systemProperties = System.properties }

// gradle run -Dserver.context-path=/app
run { systemProperties = System.properties }

[ // use as gradle task: gradle runDefault
  runDefault: 'daggerok.messaging.rabbit.plain.DefaultExchangeDemo',
].each { taskName, mainClass ->
  println "create JavaExec task '$taskName' for main class: $mainClass"
  tasks.create(name: taskName, type: JavaExec, dependsOn: classes) {
    group 'JavaExec'
    classpath = sourceSets.main.runtimeClasspath
    main mainClass
  }
}
